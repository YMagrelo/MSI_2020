{"version":3,"sources":["assets/icon/message.svg","assets/icon/favorite.svg","assets/icon/heart.svg","api.js","redux/reducer.jsx","constants.js","components/RandomJoke.jsx","components/Radio.jsx","components/Randomizer.jsx","components/Favorite.jsx","App.jsx","redux/store.jsx","index.js"],"names":["module","exports","BASE_URL","initialState","randomJoke","favoriteJokes","categories","setRandomJoke","payload","type","getRandomJokeThunk","dispatch","fetch","then","response","json","data","getCategoriesThunk","getJokeFromCategoriesThunk","category","getJokeFromCategories","getPassedHours","prevDate","presentDate","connect","props","setFavorite","previousDate","Date","updated_at","nextDate","passedHours","className","onClick","src","favorite","alt","message","href","url","target","rel","id","value","toFixed","length","state","setCategories","getRandomJoke","useState","selected","setSelected","choosenCategories","setChoosenCategories","useEffect","handleSelected","event","handleCategories","innerHTML","checked","onChange","map","cat","setFavoriteJoke","deleteFavorite","joke","key","App","store","createStore","action","filter","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3888588c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/message.ee31211c.svg\";","module.exports = __webpack_public_path__ + \"static/media/favorite.e977fb9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.0865c832.svg\";","const BASE_URL = 'https://api.chucknorris.io/jokes/';\n\nexport const getJoke = () => fetch(`${BASE_URL}random`)\n  .then(response => response.json());\n\nexport const getJokeFromCategories = category => fetch(\n  `${BASE_URL}random?category=${category}`,\n)\n  .then(response => response.json());\n\nexport const getCategories = () => fetch(`${BASE_URL}categories`)\n  .then(response => response.json());\n","import { getJoke, getCategories, getJokeFromCategories } from '../api';\n\nconst SET_RANDOM_JOKE = 'SET_RANDOM_JOKE';\nconst SET_FAVORITE_JOKE = 'SET_FAVORITE_JOKE';\nconst DELETE_FROM_FAVORITE = 'DELETE_FROM_FAVORITE';\nconst SET_CATEGORIES = 'SET_CATEGORIES';\n\nconst initialState = {\n  randomJoke: null,\n  favoriteJokes: [],\n  categories: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_RANDOM_JOKE:\n      return {\n        ...state,\n        randomJoke: action.payload,\n      };\n\n    case SET_FAVORITE_JOKE:\n      return {\n        ...state,\n        favoriteJokes: [...state.favoriteJokes, action.payload],\n      };\n\n    case DELETE_FROM_FAVORITE:\n      return {\n        ...state,\n        favoriteJokes: state.favoriteJokes\n          .filter(joke => joke.id !== action.payload),\n      };\n\n    case SET_CATEGORIES:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setRandomJoke = payload => ({\n  type: SET_RANDOM_JOKE,\n  payload,\n});\n\nconst setCategories = payload => ({\n  type: SET_CATEGORIES,\n  payload,\n});\n\nexport const setFavoriteJoke = payload => ({\n  type: SET_FAVORITE_JOKE,\n  payload,\n});\n\nexport const deleteFavoriteJoke = payload => ({\n  type: DELETE_FROM_FAVORITE,\n  payload,\n});\n\nexport const getRandomJokeThunk = () => (dispatch) => {\n  getJoke()\n    .then((data) => {\n      dispatch(setRandomJoke(data));\n    });\n};\n\nexport const getCategoriesThunk = () => (dispatch) => {\n  getCategories()\n    .then((data) => {\n      dispatch(setCategories(data));\n    });\n};\n\nexport const getJokeFromCategoriesThunk = category => (dispatch) => {\n  getJokeFromCategories(category)\n    .then((data) => {\n      dispatch(setRandomJoke(data));\n    });\n};\n","/* eslint-disable max-len */\nexport const getPassedHours = (prevDate, presentDate) => ((((presentDate - prevDate) / 1000) / 60) / 60);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport '../App.scss';\nimport { connect } from 'react-redux';\nimport './Randomizer.scss';\nimport favorite from '../assets/icon/favorite.svg';\nimport message from '../assets/icon/message.svg';\nimport { getPassedHours } from '../constants';\n\nconst RandomJoke = (props) => {\n  const { randomJoke, setFavorite } = props;\n\n  const handleAddToFavorite = () => {\n    setFavorite(randomJoke);\n  };\n\n  const previousDate = new Date(randomJoke.updated_at);\n  const nextDate = new Date();\n  const passedHours = getPassedHours(previousDate, nextDate);\n\n  return (\n    <div className=\"randomizer__content content\">\n      <div className=\"content__addToFavorite-wrapper\">\n        <button\n          type=\"button\"\n          className=\"content__addToFavorite\"\n          onClick={handleAddToFavorite}\n        >\n          <img src={favorite} alt=\"add to favorite\" />\n        </button>\n      </div>\n      <div className=\"content__item-container\">\n        <div className=\"content__textIcon-wrapper\">\n          <img\n            src={message}\n            alt=\"joke item icon\"\n            className=\"content__textIcon\"\n          />\n        </div>\n        <div className=\"content__joke joke\">\n          <div className=\"joke__id-wrapper\">\n            <span className=\"joke__id-title\">ID: </span>\n            <a\n              href={randomJoke.url}\n              className=\"joke__id-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {randomJoke.id}\n            </a>\n          </div>\n          <div className=\"joke__value\">{randomJoke.value}</div>\n          <div className=\"joke__footer\">\n            <div className=\"joke__date\">\n              {`Last update: ${passedHours.toFixed()} hours ago`}\n            </div>\n            <div className=\"joke__categories\">\n              {randomJoke.categories.length ? randomJoke.categories : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect()(RandomJoke);\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './Radio.scss';\nimport { connect } from 'react-redux';\nimport { getCategoriesThunk } from '../redux/reducer';\n\nconst Radio = (props) => {\n  const {\n    categories,\n    setCategories,\n    getRandomJoke,\n    getJokeFromCategories,\n  } = props;\n  const [selected, setSelected] = useState('random');\n  const [choosenCategories, setChoosenCategories] = useState('');\n\n  useEffect(() => {\n    setCategories();\n  });\n\n  const handleSelected = (event) => {\n    const { value } = event.target;\n\n    setSelected(value);\n    setChoosenCategories('');\n  };\n\n  const handleCategories = (event) => {\n    const value = event.target.innerHTML;\n\n    setChoosenCategories(value);\n  };\n\n  const handleGetJoke = () => {\n    if (choosenCategories === '') {\n      return getRandomJoke();\n    }\n\n    return getJokeFromCategories(choosenCategories);\n  };\n\n  return (\n    <>\n      <form className=\"radio__list\">\n        <div className=\"radio__item\">\n          <label>\n            <input\n              type=\"radio\"\n              value=\"random\"\n              checked={selected === 'random'}\n              onChange={handleSelected}\n            />\n            <span className=\"radio__text\">Random</span>\n          </label>\n        </div>\n        <div className=\"radio__item\">\n          <label>\n            <input\n              type=\"radio\"\n              value=\"categories\"\n              checked={selected === 'categories'}\n              onChange={handleSelected}\n            />\n            <span className=\"radio__text\">From categories</span>\n          </label>\n          {selected === 'categories' ? (\n            <div className=\"categories__list\">\n              {categories.map(cat => (\n                <button\n                  type=\"button\"\n                  className=\"categories__item\"\n                  onClick={handleCategories}\n                >\n                  {cat}\n                </button>\n              ))}\n            </div>\n          ) : null}\n        </div>\n        <div className=\"radio__item\">\n          <label>\n            <input\n              type=\"radio\"\n              value=\"search\"\n              checked={selected === 'search'}\n              onChange={handleSelected}\n            />\n            <span className=\"radio__text\">Search</span>\n          </label>\n        </div>\n      </form>\n      <button\n        type=\"button\"\n        className=\"radio__button\"\n        onClick={handleGetJoke}\n      >\n  Get a joke\n      </button>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  categories: state.categories,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCategories: () => dispatch(getCategoriesThunk()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Radio);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport '../App.scss';\nimport { connect } from 'react-redux';\nimport {\n  getRandomJokeThunk,\n  setFavoriteJoke,\n  getJokeFromCategoriesThunk,\n} from '../redux/reducer';\nimport RandomJoke from './RandomJoke';\nimport './Randomizer.scss';\nimport Radio from './Radio';\n\nconst Randomizer = (props) => {\n  const {\n    getRandomJoke,\n    randomJoke,\n    setFavorite,\n    getJokeFromCategories,\n  } = props;\n\n  return (\n    <div className=\"randomizer\">\n      <h1 className=\"randomizer__heading\">Chuck Norris facts</h1>\n      <p className=\"randomizer__title\">Hey!</p>\n      <p className=\"randomizer__underTitle\">\n          Let’s try to find a joke for you:\n      </p>\n      <Radio\n        getRandomJoke={getRandomJoke}\n        getJokeFromCategories={getJokeFromCategories}\n      />\n      {randomJoke === null\n        ? null\n        : (\n          <RandomJoke\n            randomJoke={randomJoke}\n            setFavorite={setFavorite}\n          />\n        )}\n\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  randomJoke: state.randomJoke,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getRandomJoke: () => dispatch(getRandomJokeThunk()),\n  setFavorite: payload => dispatch(setFavoriteJoke(payload)),\n  getJokeFromCategories: category => dispatch(\n    getJokeFromCategoriesThunk(category),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Randomizer);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './Favorite.scss';\nimport { connect } from 'react-redux';\nimport { deleteFavoriteJoke } from '../redux/reducer';\nimport favorite from '../assets/icon/heart.svg';\nimport message from '../assets/icon/message.svg';\nimport { getPassedHours } from '../constants';\n\nconst Favorite = (props) => {\n  const { favoriteJokes, deleteFavorite } = props;\n\n  return (\n    <div className=\"favorite\">\n      <h2 className=\"favorite__title\">Favourite</h2>\n      {favoriteJokes.map((joke) => {\n        const previousDate = new Date(joke.updated_at);\n        const nextDate = new Date();\n        const passedHours = getPassedHours(previousDate, nextDate);\n        const handleDeleteFavorite = () => {\n          deleteFavorite(joke.id);\n        };\n\n        return (\n          <div className=\"favorite__content content-favourite\" key={joke.id}>\n            <div className=\"content-favourite__addToFavorite-wrapper\">\n              <button\n                type=\"button\"\n                className=\"content-favourite__addToFavorite\"\n                onClick={handleDeleteFavorite}\n              >\n                <img src={favorite} alt=\"remove from favorites\" />\n              </button>\n            </div>\n            <div className=\"content-favourite__item-container\">\n              <div className=\"content-favourite__textIcon-container\">\n                <img\n                  src={message}\n                  alt=\"joke item icon\"\n                  className=\"content-favourite__textIcon\"\n                />\n              </div>\n              <div className=\"content-favourite__joke joke\">\n                <div className=\"joke__id-wrapper\">\n                  <span className=\"joke__id-title\">ID:</span>\n                  <a\n                    href={joke.url}\n                    className=\"joke__id-link\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {joke.id}\n                  </a>\n                </div>\n                <div className=\"joke__value\">{joke.value}</div>\n                <div className=\"joke__footer\">\n                  <div className=\"joke__date\">\n                    {`Last update: ${passedHours.toFixed()} hours ago`}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  favoriteJokes: state.favoriteJokes,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteFavorite: id => dispatch(deleteFavoriteJoke(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorite);\n","import React from 'react';\nimport './App.scss';\nimport Randomizer from './components/Randomizer';\nimport Favorite from './components/Favorite';\n\nconst App = () => (\n  <div className=\"app-wrapper\">\n    <div className=\"app-wrapper__content\"><Randomizer /></div>\n    <div className=\"app-wrapper__favorite\"><Favorite /></div>\n  </div>\n);\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}