{"version":3,"sources":["assets/icon/favorite.svg","assets/icon/message.svg","redux/reducer.jsx","api.js","components/RandomJoke.jsx","components/Randomizer.jsx","App.jsx","redux/store.jsx","index.js"],"names":["module","exports","initialState","randomJoke","getRandomJokeThunk","dispatch","fetch","then","response","json","data","type","payload","connect","props","className","src","favorite","alt","message","href","url","id","value","updated_at","state","getRandomJoke","onClick","App","store","createStore","action","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,qICIrCC,EAAe,CACnBC,WAAY,MAqBDC,EAAqB,kBAAM,SAACC,GCvBhCC,MAAM,GAAD,OAHG,oCAGH,WACTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDwB1BF,MAAK,SAACG,GACLL,EAR4B,CAChCM,KApBsB,kBAqBtBC,QAM2BF,S,yCEqBdG,iBA1CI,SAACC,GAAW,IACrBX,EAAeW,EAAfX,WAER,OACE,yBAAKY,UAAU,+BACb,yBAAKA,UAAU,kCACb,4BACEJ,KAAK,SACLI,UAAU,0BAEV,yBAAKC,IAAKC,IAAUC,IAAI,sBAG5B,yBAAKH,UAAU,2BACb,yBAAKA,UAAU,+BACb,yBACEC,IAAKG,IACLD,IAAI,iBACJH,UAAU,uBAGd,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,kBAAhB,OACA,uBACEK,KAAMjB,EAAWkB,IACjBN,UAAU,iBAETZ,EAAWmB,KAGhB,yBAAKP,UAAU,eAAeZ,EAAWoB,OACzC,yBAAKR,UAAU,gBACb,yBAAKA,UAAU,cAAf,uBAA6CZ,EAAWqB,aACxD,yBAAKT,UAAU,oBAAf,gBCDGF,eARS,SAAAY,GAAK,MAAK,CAChCtB,WAAYsB,EAAMtB,eAGO,SAAAE,GAAQ,MAAK,CACtCqB,cAAe,kBAAMrB,EAASD,SAGjBS,EAjCI,SAACC,GAAW,IACrBY,EAA8BZ,EAA9BY,cAAevB,EAAeW,EAAfX,WAEvB,OACE,yBAAKY,UAAU,cACb,wBAAIA,UAAU,uBAAd,YACA,uBAAGA,UAAU,qBAAb,QACA,uBAAGA,UAAU,0BAAb,0CAGA,4BACEJ,KAAK,SACLI,UAAU,qBACVY,QAASD,GAHX,cAOgB,OAAfvB,EACG,KACA,kBAAC,EAAD,CAAYA,WAAYA,QChBnByB,EAPH,kBACV,yBAAKb,UAAU,eACb,yBAAKA,UAAU,wBAAuB,kBAAC,EAAD,OACtC,yBAAKA,UAAU,yBAAf,c,eCHSc,EAAQC,aLIE,WAAmC,IAAlCL,EAAiC,uDAAzBvB,EAAc6B,EAAW,uCACvD,OAAQA,EAAOpB,MACb,IARoB,kBASlB,OAAO,eACFc,EADL,CAEEtB,WAAY4B,EAAOnB,UAGvB,QACE,OAAOa,KKb6BO,YAAgBC,MAE1DC,OAAOL,MAAQA,ECAfM,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,OAEFQ,SAASC,eAAe,U","file":"static/js/main.68cc26c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favorite.e977fb9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/message.ee31211c.svg\";","import { getJoke } from '../api';\n\nconst SET_RANDOM_JOKE = 'SET_RANDOM_JOKE';\n\nconst initialState = {\n  randomJoke: null,\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_RANDOM_JOKE:\n      return {\n        ...state,\n        randomJoke: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setRandomJoke = payload => ({\n  type: SET_RANDOM_JOKE,\n  payload,\n});\n\nexport const getRandomJokeThunk = () => (dispatch) => {\n  getJoke()\n    .then((data) => {\n      dispatch(setRandomJoke(data));\n    });\n};\n","const BASE_URL = 'https://api.chucknorris.io/jokes/';\n\nexport const getJoke = () => {\n  return fetch(`${BASE_URL}random`)\n    .then(response => response.json());\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport '../App.scss';\nimport { connect } from 'react-redux';\nimport './Randomizer.scss';\nimport favorite from '../assets/icon/favorite.svg';\nimport message from '../assets/icon/message.svg';\n\nconst RandomJoke = (props) => {\n  const { randomJoke } = props;\n\n  return (\n    <div className=\"randomizer__content content\">\n      <div className=\"content__addToFavorite-wrapper\">\n        <button\n          type=\"button\"\n          className=\"content__addToFavorite\"\n        >\n          <img src={favorite} alt=\"add to favorite\" />\n        </button>\n      </div>\n      <div className=\"content__item-container\">\n        <div className=\"content__textIcon-container\">\n          <img\n            src={message}\n            alt=\"joke item icon\"\n            className=\"content__textIcon\"\n          />\n        </div>\n        <div className=\"content__joke joke\">\n          <div className=\"joke__id-wrapper\">\n            <span className=\"joke__id-title\">ID:</span>\n            <a\n              href={randomJoke.url}\n              className=\"joke__id-link\"\n            >\n              {randomJoke.id}\n            </a>\n          </div>\n          <div className=\"joke__value\">{randomJoke.value}</div>\n          <div className=\"joke__footer\">\n            <div className=\"joke__date\">{`Last update: ${randomJoke.updated_at}`}</div>\n            <div className=\"joke__categories\">dfdfd</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect()(RandomJoke);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport '../App.scss';\nimport { connect } from 'react-redux';\nimport { getRandomJokeThunk } from '../redux/reducer';\nimport RandomJoke from './RandomJoke';\nimport './Randomizer.scss';\n\nconst Randomizer = (props) => {\n  const { getRandomJoke, randomJoke } = props;\n\n  return (\n    <div className=\"randomizer\">\n      <h1 className=\"randomizer__heading\">MSI 2020</h1>\n      <p className=\"randomizer__title\">Hey!</p>\n      <p className=\"randomizer__underTitle\">\n          Letâ€™s try to find a joke for you:\n      </p>\n      <button\n        type=\"button\"\n        className=\"randomizer__button\"\n        onClick={getRandomJoke}\n      >\n  Get a joke\n      </button>\n      {randomJoke === null\n        ? null\n        : <RandomJoke randomJoke={randomJoke} />}\n\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  randomJoke: state.randomJoke,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getRandomJoke: () => dispatch(getRandomJokeThunk()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Randomizer);\n","import React from 'react';\nimport './App.scss';\nimport Randomizer from './components/Randomizer';\n\nconst App = () => (\n  <div className=\"app-wrapper\">\n    <div className=\"app-wrapper__content\"><Randomizer /></div>\n    <div className=\"app-wrapper__favorite\">Favorite</div>\n  </div>\n);\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}