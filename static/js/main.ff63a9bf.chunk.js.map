{"version":3,"sources":["assets/icon/favorite.svg","api.js","redux/reducer.jsx","utilities.js","components/RandomJoke.jsx","components/Radio.jsx","components/SearchResult.jsx","components/Burger.jsx","components/Randomizer.jsx","components/Favorite.jsx","App.jsx","redux/store.jsx","index.js","assets/icon/heart.svg","assets/icon/message.svg"],"names":["module","exports","BASE_URL","initialState","randomJoke","favoriteJokes","categories","searchJokes","setRandomJoke","payload","type","setFavoriteJoke","deleteFavoriteJoke","getRandomJokeThunk","dispatch","fetch","then","response","json","data","getCategoriesThunk","getJokeFromCategoriesThunk","category","getJokeFromCategories","getJokeSearchThunk","query","getJokeSearch","status","result","getPassedHours","prevDate","presentDate","connect","state","deleteFavorite","id","setFavorite","props","previousDate","Date","updated_at","nextDate","passedHours","className","includes","onClick","src","activeFavorite","alt","favorite","message","href","url","target","rel","value","toFixed","length","setCategories","setSearchJoke","clearSearch","getRandomJoke","setJokeFromCategories","useState","selected","setSelected","choosenCategories","setChoosenCategories","setQuery","inputError","setInputError","useEffect","handleSelected","event","handleCategories","innerHTML","checked","onChange","map","cat","key","placeholder","joke","handleDeleteFavorite","searchItem","find","item","handleAddToFavorite","StyledBurger","styled","div","open","Burger","setOpen","App","store","createStore","action","filter","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff63a9bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favorite.e977fb9e.svg\";","const BASE_URL = 'https://api.chucknorris.io/jokes/';\n\nexport const getJoke = () => fetch(`${BASE_URL}random`)\n  .then(response => response.json());\n\nexport const getJokeFromCategories = category => fetch(\n  `${BASE_URL}random?category=${category}`,\n)\n  .then(response => response.json());\n\nexport const getJokeSearch = query => fetch(\n  `${BASE_URL}search?query=${query}`,\n)\n  .then(response => response.json());\n\nexport const getCategories = () => fetch(`${BASE_URL}categories`)\n  .then(response => response.json());\n","import {\n  getJoke,\n  getCategories,\n  getJokeFromCategories,\n  getJokeSearch,\n} from '../api';\n\nconst SET_RANDOM_JOKE = 'SET_RANDOM_JOKE';\nconst SET_FAVORITE_JOKE = 'SET_FAVORITE_JOKE';\nconst DELETE_FROM_FAVORITE = 'DELETE_FROM_FAVORITE';\nconst SET_CATEGORIES = 'SET_CATEGORIES';\nconst SET_SEARCH_JOKES = 'SET_SEARCH_JOKES';\nconst CLEAR_SEARCH = 'CLEAR_SEARCH';\n\nconst initialState = {\n  randomJoke: null,\n  favoriteJokes: [],\n  categories: [],\n  searchJokes: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_RANDOM_JOKE:\n      return {\n        ...state,\n        randomJoke: action.payload,\n      };\n\n    case SET_SEARCH_JOKES:\n      return {\n        ...state,\n        searchJokes: action.payload,\n      };\n\n    case CLEAR_SEARCH:\n      return {\n        ...state,\n        searchJokes: [],\n      };\n\n    case SET_FAVORITE_JOKE:\n      return {\n        ...state,\n        favoriteJokes: [...state.favoriteJokes, action.payload],\n      };\n\n    case DELETE_FROM_FAVORITE:\n      return {\n        ...state,\n        favoriteJokes: state.favoriteJokes\n          .filter(joke => joke.id !== action.payload),\n      };\n\n    case SET_CATEGORIES:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setRandomJoke = payload => ({\n  type: SET_RANDOM_JOKE,\n  payload,\n});\n\nconst setCategories = payload => ({\n  type: SET_CATEGORIES,\n  payload,\n});\n\nexport const setFavoriteJoke = payload => ({\n  type: SET_FAVORITE_JOKE,\n  payload,\n});\n\nexport const deleteFavoriteJoke = payload => ({\n  type: DELETE_FROM_FAVORITE,\n  payload,\n});\n\nconst setSearchJoke = payload => ({\n  type: SET_SEARCH_JOKES,\n  payload,\n});\n\nexport const clearSearchJoke = () => ({\n  type: CLEAR_SEARCH,\n});\n\nexport const getRandomJokeThunk = () => (dispatch) => {\n  getJoke()\n    .then((data) => {\n      dispatch(setRandomJoke(data));\n    });\n};\n\nexport const getCategoriesThunk = () => (dispatch) => {\n  getCategories()\n    .then((data) => {\n      dispatch(setCategories(data));\n    });\n};\n\nexport const getJokeFromCategoriesThunk = category => (dispatch) => {\n  getJokeFromCategories(category)\n    .then((data) => {\n      dispatch(setRandomJoke(data));\n    });\n};\n\nexport const getJokeSearchThunk = query => (dispatch) => {\n  getJokeSearch(query)\n    .then((data) => {\n      if (data.status !== 400) {\n        dispatch(setSearchJoke(data.result));\n      }\n    });\n};\n","/* eslint-disable max-len */\nexport const getPassedHours = (prevDate, presentDate) => ((((presentDate - prevDate) / 1000) / 60) / 60);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport '../App.scss';\nimport { connect } from 'react-redux';\nimport './Randomizer.scss';\nimport favorite from '../assets/icon/favorite.svg';\nimport activeFavorite from '../assets/icon/heart.svg';\nimport message from '../assets/icon/message.svg';\nimport { getPassedHours } from '../utilities';\nimport { setFavoriteJoke, deleteFavoriteJoke } from '../redux/reducer';\n\nconst RandomJoke = (props) => {\n  const { randomJoke, setFavorite, deleteFavorite, favoriteJokes } = props;\n  const handleAddToFavorite = () => {\n    setFavorite(randomJoke);\n  };\n\n  const handleDeleteFavorite = () => {\n    deleteFavorite(randomJoke.id);\n  };\n\n  const previousDate = new Date(randomJoke.updated_at);\n  const nextDate = new Date();\n  const passedHours = getPassedHours(previousDate, nextDate);\n\n  return (\n    <div className=\"randomizer__content content\">\n      <div className=\"content__addToFavorite-wrapper\">\n        {!favoriteJokes.includes(randomJoke) ? (\n          <button\n            type=\"button\"\n            className=\"content__addToFavorite\"\n            onClick={handleAddToFavorite}\n          >\n            <img src={favorite} alt=\"add to favorite\" />\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className=\"content__addToFavorite\"\n            onClick={handleDeleteFavorite}\n          >\n            <img src={activeFavorite} alt=\"remove from favorite\" />\n          </button>\n        )}\n      </div>\n      <div className=\"content__item-container\">\n        <div className=\"content__textIcon-wrapper\">\n          <img\n            src={message}\n            alt=\"joke item icon\"\n            className=\"content__textIcon\"\n          />\n        </div>\n        <div className=\"content__joke joke\">\n          <div className=\"joke__id-wrapper\">\n            <span className=\"joke__id-title\">ID: </span>\n            <a\n              href={randomJoke.url}\n              className=\"joke__id-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {randomJoke.id}\n            </a>\n          </div>\n          <div className=\"joke__value\">{randomJoke.value}</div>\n          <div className=\"joke__footer\">\n            <div className=\"joke__date\">\n              {`Last update: ${passedHours.toFixed()} hours ago`}\n            </div>\n            <div className=\"joke__categories\">\n              {randomJoke.categories.length ? randomJoke.categories : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n};\n\nconst mapStateToProps = state => ({\n  randomJoke: state.randomJoke,\n  favoriteJokes: state.favoriteJokes,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteFavorite: id => dispatch(deleteFavoriteJoke(id)),\n  setFavorite: payload => dispatch(setFavoriteJoke(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomJoke);\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './Radio.scss';\nimport './Randomizer.scss';\nimport { connect } from 'react-redux';\nimport {\n  getCategoriesThunk,\n  getJokeSearchThunk,\n  clearSearchJoke,\n} from '../redux/reducer';\n\nconst Radio = (props) => {\n  const {\n    categories,\n    setCategories,\n    getRandomJoke,\n    setJokeFromCategories,\n    setSearchJoke,\n    clearSearch,\n  } = props;\n  const [selected, setSelected] = useState('random');\n  const [choosenCategories, setChoosenCategories] = useState('');\n  const [query, setQuery] = useState('');\n  const [inputError, setInputError] = useState(false);\n\n  useEffect(() => {\n    setCategories();\n  });\n\n  const handleInput = (event) => {\n    const { value } = event.target;\n\n    setInputError(true);\n    setQuery(value);\n    setSearchJoke(query);\n\n    if (query.length <= 3) {\n      clearSearch();\n    }\n\n    if (query.length >= 3) {\n      setInputError(false);\n    }\n  };\n\n  const handleSelected = (event) => {\n    const { value } = event.target;\n\n    setSelected(value);\n    setChoosenCategories('');\n  };\n\n  const handleCategories = (event) => {\n    const value = event.target.innerHTML;\n\n    setChoosenCategories(value);\n  };\n\n  const handleGetJoke = () => {\n    if (choosenCategories === '') {\n      return getRandomJoke();\n    }\n\n    return setJokeFromCategories(choosenCategories);\n  };\n\n  return (\n    <>\n      <form className=\"radio__list\">\n        <div className=\"radio__item\">\n          <label>\n            <input\n              type=\"radio\"\n              value=\"random\"\n              checked={selected === 'random'}\n              onChange={handleSelected}\n            />\n            <span className=\"radio__text\">Random</span>\n          </label>\n        </div>\n        <div className=\"radio__item\">\n          <label>\n            <input\n              type=\"radio\"\n              value=\"categories\"\n              checked={selected === 'categories'}\n              onChange={handleSelected}\n            />\n            <span className=\"radio__text\">From categories</span>\n          </label>\n          {selected === 'categories' ? (\n            <div className=\"categories__list\">\n              {categories.map(cat => (\n                <button\n                  type=\"button\"\n                  className=\"categories__item\"\n                  onClick={handleCategories}\n                  key={cat}\n                >\n                  {cat}\n                </button>\n              ))}\n            </div>\n          ) : null}\n        </div>\n        <div className=\"radio__item\">\n          <label>\n            <input\n              type=\"radio\"\n              value=\"search\"\n              checked={selected === 'search'}\n              onChange={handleSelected}\n            />\n            <span className=\"radio__text\">Search</span>\n          </label>\n          {selected === 'search'\n            ? (\n              <div className=\"radio__form\">\n                <input\n                  className=\"radio__input\"\n                  placeholder=\"Free text search...\"\n                  value={query}\n                  onChange={handleInput}\n                />\n                {inputError\n                  ? (\n                    <span className=\"radio__input-error\">\n                      input must be more than 3 characters\n                    </span>\n                  )\n                  : null}\n              </div>\n            )\n            : null}\n        </div>\n      </form>\n      <button\n        type=\"button\"\n        className=\"radio__button\"\n        onClick={handleGetJoke}\n      >\n  Get a joke\n      </button>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  categories: state.categories,\n  searchJokes: state.searchJokes,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCategories: () => dispatch(getCategoriesThunk()),\n  setSearchJoke: query => dispatch(getJokeSearchThunk(query)),\n  clearSearch: () => dispatch(clearSearchJoke()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Radio);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport '../App.scss';\nimport './Randomizer.scss';\nimport './SearchResult.scss';\nimport { connect } from 'react-redux';\nimport { getPassedHours } from '../utilities';\nimport favorite from '../assets/icon/favorite.svg';\nimport activeFavorite from '../assets/icon/heart.svg';\nimport message from '../assets/icon/message.svg';\nimport {\n  deleteFavoriteJoke,\n  setFavoriteJoke,\n} from '../redux/reducer';\n\nconst SearchResult = (props) => {\n  const { searchJokes, setFavorite, favoriteJokes, deleteFavorite } = props;\n  const handleAddToFavorite = (id) => {\n    const searchItem = searchJokes.find(item => item.id === id);\n\n    setFavorite(searchItem);\n  };\n\n  const handleDeleteFavorite = (id) => {\n    deleteFavorite(id);\n  };\n\n  return (\n    <div>\n      {searchJokes.map((joke) => {\n        const previousDate = new Date(joke.updated_at);\n        const nextDate = new Date();\n        const passedHours = getPassedHours(previousDate, nextDate);\n        const { id } = joke;\n\n        return (\n          <div className=\"randomizer__content search\" key={joke.id}>\n            <div className=\"search__addToFavorite-wrapper\">\n              {!favoriteJokes.includes(joke) ? (\n                <button\n                  type=\"button\"\n                  className=\"content__addToFavorite\"\n                  onClick={() => handleAddToFavorite(id)}\n                >\n                  <img src={favorite} alt=\"add to favorite\" />\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"content__addToFavorite\"\n                  onClick={() => handleDeleteFavorite(id)}\n                >\n                  <img src={activeFavorite} alt=\"remove from favorite\" />\n                </button>\n              )}\n            </div>\n            <div className=\"search__item-container\">\n              <div className=\"search__textIcon-wrapper\">\n                <img\n                  src={message}\n                  alt=\"joke item icon\"\n                  className=\"search__textIcon\"\n                />\n              </div>\n              <div className=\"search__joke joke\">\n                <div className=\"joke__id-wrapper\">\n                  <span className=\"joke__id-title\">ID:</span>\n                  <a\n                    href={joke.url}\n                    className=\"joke__id-link\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {joke.id}\n                  </a>\n                </div>\n                <div className=\"joke__value\">{joke.value}</div>\n                <div className=\"joke__footer\">\n                  <div className=\"joke__date\">\n                    {`Last update: ${passedHours.toFixed()} hours ago`}\n                  </div>\n                  <div className=\"joke__categories\">\n                    {joke.categories.length ? joke.categories : null}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  searchJokes: state.searchJokes,\n  favoriteJokes: state.favoriteJokes,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteFavorite: id => dispatch(deleteFavoriteJoke(id)),\n  setFavorite: payload => dispatch(setFavoriteJoke(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResult);\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport '../App.scss';\nimport styled from 'styled-components';\nimport './Randomizer.scss';\n\nconst StyledBurger = styled.div`\nposition: relative;\n  div {\n    transition: all 0.3s linear;\n    position: absolut;\n    &:nth-child(1) {\n      transform: ${({ open }) => (open ? 'rotate(45deg)' : 'rotate(0deg)')};\n    }\n    &:nth-child(2) {\n      transform: ${({ open }) => (open ? 'rotate(-45deg)' : 'rotate(0deg)')};\n    }\n  }\n\n`;\n\nexport const Burger = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div\n      className=\"burger\"\n    >\n      <StyledBurger\n        className=\"burger__outter\"\n        onClick={() => setOpen(!open)}\n        open={open}\n      >\n        <div className=\"burger__inner\" />\n        <div className=\"burger__inner\" />\n      </StyledBurger>\n      <div className=\"burger__title\">Favourite</div>\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport '../App.scss';\nimport { connect } from 'react-redux';\nimport {\n  getRandomJokeThunk,\n  getJokeFromCategoriesThunk,\n} from '../redux/reducer';\nimport RandomJoke from './RandomJoke';\nimport './Randomizer.scss';\nimport Radio from './Radio';\nimport SearchResult from './SearchResult';\nimport { Burger } from './Burger';\n\nconst Randomizer = (props) => {\n  const {\n    getRandomJoke,\n    randomJoke,\n    setJokeFromCategories,\n    searchJokes,\n  } = props;\n\n  return (\n    <div\n      className=\"randomizer\"\n    >\n      <h1 className=\"randomizer__heading\">Chuck Norris facts</h1>\n      <div\n        className=\"randomizer__burger\"\n      >\n        <Burger />\n      </div>\n      <p className=\"randomizer__title\">Hey!</p>\n      <p className=\"randomizer__underTitle\">\n          Let’s try to find a joke for you:\n      </p>\n      <Radio\n        getRandomJoke={getRandomJoke}\n        setJokeFromCategories={setJokeFromCategories}\n      />\n      {randomJoke === null\n        ? null\n        : (\n          <RandomJoke />\n        )}\n      {searchJokes.length\n        ? (\n          <SearchResult />\n        )\n        : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  randomJoke: state.randomJoke,\n  searchJokes: state.searchJokes,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getRandomJoke: () => dispatch(getRandomJokeThunk()),\n  setJokeFromCategories: category => dispatch(\n    getJokeFromCategoriesThunk(category),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Randomizer);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './Favorite.scss';\nimport './Randomizer.scss';\nimport { connect } from 'react-redux';\nimport { deleteFavoriteJoke } from '../redux/reducer';\nimport activeFavorite from '../assets/icon/heart.svg';\nimport message from '../assets/icon/message.svg';\nimport { getPassedHours } from '../utilities';\n\nconst Favorite = (props) => {\n  const { favoriteJokes, deleteFavorite } = props;\n\n  return (\n    <div className=\"favorite\">\n      <h2 className=\"favorite__title\">Favourite</h2>\n      {favoriteJokes.map((joke) => {\n        const previousDate = new Date(joke.updated_at);\n        const nextDate = new Date();\n        const passedHours = getPassedHours(previousDate, nextDate);\n        const handleDeleteFavorite = () => {\n          deleteFavorite(joke.id);\n        };\n\n        return (\n          <div className=\"favorite__content content-favourite\" key={joke.id}>\n            <div className=\"content-favourite__addToFavorite-wrapper\">\n              <button\n                type=\"button\"\n                className=\"content-favourite__addToFavorite\"\n                onClick={handleDeleteFavorite}\n              >\n                <img src={activeFavorite} alt=\"remove from favorites\" />\n              </button>\n            </div>\n            <div className=\"content-favourite__item-container\">\n              <div className=\"content-favourite__textIcon-container\">\n                <img\n                  src={message}\n                  alt=\"joke item icon\"\n                  className=\"content-favourite__textIcon\"\n                />\n              </div>\n              <div className=\"content-favourite__joke joke\">\n                <div className=\"joke__id-wrapper\">\n                  <span className=\"joke__id-title\">ID:</span>\n                  <a\n                    href={joke.url}\n                    className=\"joke__id-link\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {joke.id}\n                  </a>\n                </div>\n                <div className=\"joke__value\">{joke.value}</div>\n                <div className=\"joke__footer\">\n                  <div className=\"joke__date\">\n                    {`Last update: ${passedHours.toFixed()} hours ago`}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  favoriteJokes: state.favoriteJokes,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteFavorite: id => dispatch(deleteFavoriteJoke(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorite);\n","import React from 'react';\nimport './App.scss';\nimport Randomizer from './components/Randomizer';\nimport Favorite from './components/Favorite';\n\nconst App = () => (\n  <div className=\"app-wrapper\">\n    <div className=\"app-wrapper__content\"><Randomizer /></div>\n    <div className=\"app-wrapper__favorite\"><Favorite /></div>\n  </div>\n);\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/heart.0865c832.svg\";","module.exports = __webpack_public_path__ + \"static/media/message.ee31211c.svg\";"],"sourceRoot":""}