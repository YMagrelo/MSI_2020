{"version":3,"sources":["assets/icon/heart.svg","assets/icon/message.svg","api.js","redux/reducer.jsx","utilities.js","components/RandomJoke.jsx","components/Radio.jsx","components/SearchResult.jsx","components/Randomizer.jsx","components/Favorite.jsx","App.jsx","redux/store.jsx","index.js","assets/icon/favorite.svg"],"names":["module","exports","BASE_URL","initialState","randomJoke","favoriteJokes","categories","searchJokes","setRandomJoke","payload","type","getRandomJokeThunk","dispatch","fetch","then","response","json","data","getCategoriesThunk","getJokeFromCategoriesThunk","category","getJokeFromCategories","getJokeSearchThunk","query","getJokeSearch","status","result","getPassedHours","prevDate","presentDate","connect","props","setFavorite","previousDate","Date","updated_at","nextDate","passedHours","className","onClick","src","favorite","alt","message","href","url","target","rel","id","value","toFixed","length","state","setCategories","setSearchJoke","clearSearch","getRandomJoke","setJokeFromCategories","useState","selected","setSelected","choosenCategories","setChoosenCategories","setQuery","inputError","setInputError","useEffect","handleSelected","event","handleCategories","innerHTML","checked","onChange","map","cat","key","placeholder","SearchResult","joke","searchItem","find","item","handleAddToFavorite","setFavoriteJoke","deleteFavorite","App","store","createStore","action","filter","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,mC,2ECA3CD,EAAOC,QAAU,IAA0B,qC,6HCArCC,EAAW,oCCcXC,EAAe,CACnBC,WAAY,KACZC,cAAe,GACfC,WAAY,GACZC,YAAa,IA+CTC,EAAgB,SAAAC,GAAO,MAAK,CAChCC,KA3DsB,kBA4DtBD,YA2BWE,EAAqB,kBAAM,SAACC,GD5FZC,MAAM,GAAD,OAAIX,EAAJ,WAC/BY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UC6FxBF,MAAK,SAACG,GACLL,EAASJ,EAAcS,SAIhBC,EAAqB,kBAAM,SAACN,GDtFNC,MAAM,GAAD,OAAIX,EAAJ,eACrCY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCuFxBF,MAAK,SAACG,GACLL,EAlC4B,CAChCF,KA7DqB,iBA8DrBD,QAgC2BQ,SAIhBE,EAA6B,SAAAC,GAAQ,OAAI,SAACR,IDvGlB,SAAAQ,GAAQ,OAAIP,MAAM,GAAD,OACjDX,EADiD,2BACtBkB,IAE7BN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCqG3BK,CAAsBD,GACnBN,MAAK,SAACG,GACLL,EAASJ,EAAcS,SAIhBK,EAAqB,SAAAC,GAAK,OAAI,SAACX,IDzGf,SAAAW,GAAK,OAAIV,MAAM,GAAD,OACtCX,EADsC,wBACdqB,IAE1BT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCuG3BQ,CAAcD,GACXT,MAAK,SAACG,GACe,MAAhBA,EAAKQ,QACPb,EAlC0B,CAChCF,KA3EuB,mBA4EvBD,QAgC6BQ,EAAKS,c,uCCtHvBC,EAAiB,SAACC,EAAUC,GAAX,OAA+BA,EAAcD,GAAY,IAAQ,GAAM,ICiEtFE,iBAzDI,SAACC,GAAW,IACrB3B,EAA4B2B,EAA5B3B,WAAY4B,EAAgBD,EAAhBC,YAKdC,EAAe,IAAIC,KAAK9B,EAAW+B,YACnCC,EAAW,IAAIF,KACfG,EAAcV,EAAeM,EAAcG,GAEjD,OACE,yBAAKE,UAAU,+BACb,yBAAKA,UAAU,kCACb,4BACE5B,KAAK,SACL4B,UAAU,yBACVC,QAdoB,WAC1BP,EAAY5B,KAeN,yBAAKoC,IAAKC,IAAUC,IAAI,sBAG5B,yBAAKJ,UAAU,2BACb,yBAAKA,UAAU,6BACb,yBACEE,IAAKG,IACLD,IAAI,iBACJJ,UAAU,uBAGd,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,kBAAhB,QACA,uBACEM,KAAMxC,EAAWyC,IACjBP,UAAU,gBACVQ,OAAO,SACPC,IAAI,uBAEH3C,EAAW4C,KAGhB,yBAAKV,UAAU,eAAelC,EAAW6C,OACzC,yBAAKX,UAAU,gBACb,yBAAKA,UAAU,cAAf,uBACmBD,EAAYa,UAD/B,eAGA,yBAAKZ,UAAU,oBACZlC,EAAWE,WAAW6C,OAAS/C,EAAWE,WAAa,a,OCqGvDwB,G,MAAAA,aAXS,SAAAsB,GAAK,MAAK,CAChC9C,WAAY8C,EAAM9C,WAClBC,YAAa6C,EAAM7C,gBAGM,SAAAK,GAAQ,MAAK,CACtCyC,cAAe,kBAAMzC,EAASM,MAC9BoC,cAAe,SAAA/B,GAAK,OAAIX,EAASU,EAAmBC,KACpDgC,YAAa,kBAAM3C,EHhEiB,CACpCF,KA/EmB,qBGiJNoB,EAnJD,SAACC,GAAW,IAEtBzB,EAMEyB,EANFzB,WACA+C,EAKEtB,EALFsB,cACAG,EAIEzB,EAJFyB,cACAC,EAGE1B,EAHF0B,sBACAH,EAEEvB,EAFFuB,cACAC,EACExB,EADFwB,YAPqB,EASSG,mBAAS,UATlB,mBAShBC,EATgB,KASNC,EATM,OAU2BF,mBAAS,IAVpC,mBAUhBG,EAVgB,KAUGC,EAVH,OAWGJ,mBAAS,IAXZ,mBAWhBnC,EAXgB,KAWTwC,EAXS,OAYaL,oBAAS,GAZtB,mBAYhBM,EAZgB,KAYJC,EAZI,KAcvBC,qBAAU,WACRb,OAGF,IAgBMc,EAAiB,SAACC,GAAW,IACzBnB,EAAUmB,EAAMtB,OAAhBG,MAERW,EAAYX,GACZa,EAAqB,KAGjBO,EAAmB,SAACD,GACxB,IAAMnB,EAAQmB,EAAMtB,OAAOwB,UAE3BR,EAAqBb,IAWvB,OACE,oCACE,0BAAMX,UAAU,eACd,yBAAKA,UAAU,eACb,+BACE,2BACE5B,KAAK,QACLuC,MAAM,SACNsB,QAAsB,WAAbZ,EACTa,SAAUL,IAEZ,0BAAM7B,UAAU,eAAhB,YAGJ,yBAAKA,UAAU,eACb,+BACE,2BACE5B,KAAK,QACLuC,MAAM,aACNsB,QAAsB,eAAbZ,EACTa,SAAUL,IAEZ,0BAAM7B,UAAU,eAAhB,oBAEY,eAAbqB,EACC,yBAAKrB,UAAU,oBACZhC,EAAWmE,KAAI,SAAAC,GAAG,OACjB,4BACEhE,KAAK,SACL4B,UAAU,mBACVC,QAAS8B,EACTM,IAAKD,GAEJA,OAIL,MAEN,yBAAKpC,UAAU,eACb,+BACE,2BACE5B,KAAK,QACLuC,MAAM,SACNsB,QAAsB,WAAbZ,EACTa,SAAUL,IAEZ,0BAAM7B,UAAU,eAAhB,WAEY,WAAbqB,EAEG,yBAAKrB,UAAU,eACb,2BACEA,UAAU,eACVsC,YAAY,sBACZ3B,MAAO1B,EACPiD,SA7FI,SAACJ,GAAW,IACtBnB,EAAUmB,EAAMtB,OAAhBG,MAERgB,GAAc,GACdF,EAASd,GACTK,EAAc/B,GAEVA,EAAM4B,QAAU,GAClBI,IAGEhC,EAAM4B,QAAU,GAClBc,GAAc,MAmFHD,EAEG,0BAAM1B,UAAU,sBAAhB,wCAIA,MAGN,OAGR,4BACE5B,KAAK,SACL4B,UAAU,gBACVC,QAjFgB,WACpB,MAA0B,KAAtBsB,EACKL,IAGFC,EAAsBI,KAyE3B,mBC/HOgB,EAAe,SAAC9C,GAAW,IAC9BxB,EAA6BwB,EAA7BxB,YAAayB,EAAgBD,EAAhBC,YAOrB,OACE,6BACGzB,EAAYkE,KAAI,SAACK,GAChB,IAAM7C,EAAe,IAAIC,KAAK4C,EAAK3C,YAC7BC,EAAW,IAAIF,KACfG,EAAcV,EAAeM,EAAcG,GACzCY,EAAO8B,EAAP9B,GAER,OACE,yBAAKV,UAAU,8BAA8BqC,IAAKG,EAAK9B,IACrD,yBAAKV,UAAU,kCACb,4BACE5B,KAAK,SACL4B,UAAU,yBACVC,QAAS,kBApBK,SAACS,GAC3B,IAAM+B,EAAaxE,EAAYyE,MAAK,SAAAC,GAAI,OAAIA,EAAKjC,KAAOA,KAExDhB,EAAY+C,GAiBeG,CAAoBlC,KAEnC,yBAAKR,IAAKC,IAAUC,IAAI,uBAG5B,yBAAKJ,UAAU,2BACb,yBAAKA,UAAU,+BACb,yBACEE,IAAKG,IACLD,IAAI,iBACJJ,UAAU,uBAGd,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,kBAAhB,OACA,uBACEM,KAAMkC,EAAKjC,IACXP,UAAU,gBACVQ,OAAO,SACPC,IAAI,uBAEH+B,EAAK9B,KAGV,yBAAKV,UAAU,eAAewC,EAAK7B,OACnC,yBAAKX,UAAU,gBACb,yBAAKA,UAAU,cAAf,uBACmBD,EAAYa,UAD/B,eAGA,yBAAKZ,UAAU,oBACZwC,EAAKxE,WAAW6C,OAAS2B,EAAKxE,WAAa,eCMjDwB,eAbS,SAAAsB,GAAK,MAAK,CAChChD,WAAYgD,EAAMhD,WAClBG,YAAa6C,EAAM7C,gBAGM,SAAAK,GAAQ,MAAK,CACtC4C,cAAe,kBAAM5C,EAASD,MAC9BqB,YAAa,SAAAvB,GAAO,OAAIG,ELcK,SAAAH,GAAO,MAAK,CACzCC,KApEwB,oBAqExBD,WKhBiC0E,CAAgB1E,KACjDgD,sBAAuB,SAAArC,GAAQ,OAAIR,EACjCO,EAA2BC,QAIhBU,EArDI,SAACC,GAAW,IAE3ByB,EAKEzB,EALFyB,cACApD,EAIE2B,EAJF3B,WACA4B,EAGED,EAHFC,YACAyB,EAEE1B,EAFF0B,sBACAlD,EACEwB,EADFxB,YAGF,OACE,yBAAK+B,UAAU,cACb,wBAAIA,UAAU,uBAAd,sBACA,uBAAGA,UAAU,qBAAb,QACA,uBAAGA,UAAU,0BAAb,0CAGA,kBAAC,EAAD,CACEkB,cAAeA,EACfC,sBAAuBA,IAET,OAAfrD,EACG,KAEA,kBAAC,EAAD,CACEA,WAAYA,EACZ4B,YAAaA,IAGlBzB,EAAY4C,OAET,kBAAC,EAAD,CACE5C,YAAaA,EACbyB,YAAaA,IAGf,S,yBC4BKF,eARS,SAAAsB,GAAK,MAAK,CAChC/C,cAAe+C,EAAM/C,kBAGI,SAAAO,GAAQ,MAAK,CACtCwE,eAAgB,SAAApC,GAAE,OAAIpC,ENMsB,CAC5CF,KAxE2B,uBAyE3BD,QMRkDuC,QAGrClB,EApEE,SAACC,GAAW,IACnB1B,EAAkC0B,EAAlC1B,cAAe+E,EAAmBrD,EAAnBqD,eAEvB,OACE,yBAAK9C,UAAU,YACb,wBAAIA,UAAU,mBAAd,aACCjC,EAAcoE,KAAI,SAACK,GAClB,IAAM7C,EAAe,IAAIC,KAAK4C,EAAK3C,YAC7BC,EAAW,IAAIF,KACfG,EAAcV,EAAeM,EAAcG,GAKjD,OACE,yBAAKE,UAAU,sCAAsCqC,IAAKG,EAAK9B,IAC7D,yBAAKV,UAAU,4CACb,4BACE5B,KAAK,SACL4B,UAAU,mCACVC,QAVqB,WAC3B6C,EAAeN,EAAK9B,MAWd,yBAAKR,IAAKC,IAAUC,IAAI,4BAG5B,yBAAKJ,UAAU,qCACb,yBAAKA,UAAU,yCACb,yBACEE,IAAKG,IACLD,IAAI,iBACJJ,UAAU,iCAGd,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,kBAAhB,OACA,uBACEM,KAAMkC,EAAKjC,IACXP,UAAU,gBACVQ,OAAO,SACPC,IAAI,uBAEH+B,EAAK9B,KAGV,yBAAKV,UAAU,eAAewC,EAAK7B,OACnC,yBAAKX,UAAU,gBACb,yBAAKA,UAAU,cAAf,uBACmBD,EAAYa,UAD/B,0BC5CHmC,EAPH,kBACV,yBAAK/C,UAAU,eACb,yBAAKA,UAAU,wBAAuB,kBAAC,EAAD,OACtC,yBAAKA,UAAU,yBAAwB,kBAAC,EAAD,S,eCJ9BgD,EAAQC,aRiBE,WAAmC,IAAlCnC,EAAiC,uDAAzBjD,EAAcqF,EAAW,uCACvD,OAAQA,EAAO9E,MACb,IAhBoB,kBAiBlB,OAAO,eACF0C,EADL,CAEEhD,WAAYoF,EAAO/E,UAGvB,IAlBqB,mBAmBnB,OAAO,eACF2C,EADL,CAEE7C,YAAaiF,EAAO/E,UAGxB,IAvBiB,eAwBf,OAAO,eACF2C,EADL,CAEE7C,YAAa,KAGjB,IAjCsB,oBAkCpB,OAAO,eACF6C,EADL,CAEE/C,cAAc,GAAD,mBAAM+C,EAAM/C,eAAZ,CAA2BmF,EAAO/E,YAGnD,IAtCyB,uBAuCvB,OAAO,eACF2C,EADL,CAEE/C,cAAe+C,EAAM/C,cAClBoF,QAAO,SAAAX,GAAI,OAAIA,EAAK9B,KAAOwC,EAAO/E,aAGzC,IA5CmB,iBA6CjB,OAAO,eACF2C,EADL,CAEE9C,WAAYkF,EAAO/E,UAGvB,QACE,OAAO2C,KQzD6BsC,YAAgBC,MAE1DC,OAAON,MAAQA,ECAfO,IAASC,OACP,kBAAC,IAAD,CAAUR,MAAOA,GACf,kBAAC,EAAD,OAEFS,SAASC,eAAe,U,sCCV1BhG,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.1013c606.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.0865c832.svg\";","module.exports = __webpack_public_path__ + \"static/media/message.ee31211c.svg\";","const BASE_URL = 'https://api.chucknorris.io/jokes/';\n\nexport const getJoke = () => fetch(`${BASE_URL}random`)\n  .then(response => response.json());\n\nexport const getJokeFromCategories = category => fetch(\n  `${BASE_URL}random?category=${category}`,\n)\n  .then(response => response.json());\n\nexport const getJokeSearch = query => fetch(\n  `${BASE_URL}search?query=${query}`,\n)\n  .then(response => response.json());\n\nexport const getCategories = () => fetch(`${BASE_URL}categories`)\n  .then(response => response.json());\n","import {\n  getJoke,\n  getCategories,\n  getJokeFromCategories,\n  getJokeSearch,\n} from '../api';\n\nconst SET_RANDOM_JOKE = 'SET_RANDOM_JOKE';\nconst SET_FAVORITE_JOKE = 'SET_FAVORITE_JOKE';\nconst DELETE_FROM_FAVORITE = 'DELETE_FROM_FAVORITE';\nconst SET_CATEGORIES = 'SET_CATEGORIES';\nconst SET_SEARCH_JOKES = 'SET_SEARCH_JOKES';\nconst CLEAR_SEARCH = 'CLEAR_SEARCH';\n\nconst initialState = {\n  randomJoke: null,\n  favoriteJokes: [],\n  categories: [],\n  searchJokes: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_RANDOM_JOKE:\n      return {\n        ...state,\n        randomJoke: action.payload,\n      };\n\n    case SET_SEARCH_JOKES:\n      return {\n        ...state,\n        searchJokes: action.payload,\n      };\n\n    case CLEAR_SEARCH:\n      return {\n        ...state,\n        searchJokes: [],\n      };\n\n    case SET_FAVORITE_JOKE:\n      return {\n        ...state,\n        favoriteJokes: [...state.favoriteJokes, action.payload],\n      };\n\n    case DELETE_FROM_FAVORITE:\n      return {\n        ...state,\n        favoriteJokes: state.favoriteJokes\n          .filter(joke => joke.id !== action.payload),\n      };\n\n    case SET_CATEGORIES:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setRandomJoke = payload => ({\n  type: SET_RANDOM_JOKE,\n  payload,\n});\n\nconst setCategories = payload => ({\n  type: SET_CATEGORIES,\n  payload,\n});\n\nexport const setFavoriteJoke = payload => ({\n  type: SET_FAVORITE_JOKE,\n  payload,\n});\n\nexport const deleteFavoriteJoke = payload => ({\n  type: DELETE_FROM_FAVORITE,\n  payload,\n});\n\nconst setSearchJoke = payload => ({\n  type: SET_SEARCH_JOKES,\n  payload,\n});\n\nexport const clearSearchJoke = () => ({\n  type: CLEAR_SEARCH,\n});\n\nexport const getRandomJokeThunk = () => (dispatch) => {\n  getJoke()\n    .then((data) => {\n      dispatch(setRandomJoke(data));\n    });\n};\n\nexport const getCategoriesThunk = () => (dispatch) => {\n  getCategories()\n    .then((data) => {\n      dispatch(setCategories(data));\n    });\n};\n\nexport const getJokeFromCategoriesThunk = category => (dispatch) => {\n  getJokeFromCategories(category)\n    .then((data) => {\n      dispatch(setRandomJoke(data));\n    });\n};\n\nexport const getJokeSearchThunk = query => (dispatch) => {\n  getJokeSearch(query)\n    .then((data) => {\n      if (data.status !== 400) {\n        dispatch(setSearchJoke(data.result));\n      }\n    });\n};\n","/* eslint-disable max-len */\nexport const getPassedHours = (prevDate, presentDate) => ((((presentDate - prevDate) / 1000) / 60) / 60);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport '../App.scss';\nimport { connect } from 'react-redux';\nimport './Randomizer.scss';\nimport favorite from '../assets/icon/favorite.svg';\nimport message from '../assets/icon/message.svg';\nimport { getPassedHours } from '../utilities';\n\nconst RandomJoke = (props) => {\n  const { randomJoke, setFavorite } = props;\n  const handleAddToFavorite = () => {\n    setFavorite(randomJoke);\n  };\n\n  const previousDate = new Date(randomJoke.updated_at);\n  const nextDate = new Date();\n  const passedHours = getPassedHours(previousDate, nextDate);\n\n  return (\n    <div className=\"randomizer__content content\">\n      <div className=\"content__addToFavorite-wrapper\">\n        <button\n          type=\"button\"\n          className=\"content__addToFavorite\"\n          onClick={handleAddToFavorite}\n        >\n          <img src={favorite} alt=\"add to favorite\" />\n        </button>\n      </div>\n      <div className=\"content__item-container\">\n        <div className=\"content__textIcon-wrapper\">\n          <img\n            src={message}\n            alt=\"joke item icon\"\n            className=\"content__textIcon\"\n          />\n        </div>\n        <div className=\"content__joke joke\">\n          <div className=\"joke__id-wrapper\">\n            <span className=\"joke__id-title\">ID: </span>\n            <a\n              href={randomJoke.url}\n              className=\"joke__id-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {randomJoke.id}\n            </a>\n          </div>\n          <div className=\"joke__value\">{randomJoke.value}</div>\n          <div className=\"joke__footer\">\n            <div className=\"joke__date\">\n              {`Last update: ${passedHours.toFixed()} hours ago`}\n            </div>\n            <div className=\"joke__categories\">\n              {randomJoke.categories.length ? randomJoke.categories : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default connect()(RandomJoke);\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './Radio.scss';\nimport { connect } from 'react-redux';\nimport {\n  getCategoriesThunk,\n  getJokeSearchThunk,\n  clearSearchJoke,\n} from '../redux/reducer';\n\nconst Radio = (props) => {\n  const {\n    categories,\n    setCategories,\n    getRandomJoke,\n    setJokeFromCategories,\n    setSearchJoke,\n    clearSearch,\n  } = props;\n  const [selected, setSelected] = useState('random');\n  const [choosenCategories, setChoosenCategories] = useState('');\n  const [query, setQuery] = useState('');\n  const [inputError, setInputError] = useState(false);\n\n  useEffect(() => {\n    setCategories();\n  });\n\n  const handleInput = (event) => {\n    const { value } = event.target;\n\n    setInputError(true);\n    setQuery(value);\n    setSearchJoke(query);\n\n    if (query.length <= 3) {\n      clearSearch();\n    }\n\n    if (query.length >= 3) {\n      setInputError(false);\n    }\n  };\n\n  const handleSelected = (event) => {\n    const { value } = event.target;\n\n    setSelected(value);\n    setChoosenCategories('');\n  };\n\n  const handleCategories = (event) => {\n    const value = event.target.innerHTML;\n\n    setChoosenCategories(value);\n  };\n\n  const handleGetJoke = () => {\n    if (choosenCategories === '') {\n      return getRandomJoke();\n    }\n\n    return setJokeFromCategories(choosenCategories);\n  };\n\n  return (\n    <>\n      <form className=\"radio__list\">\n        <div className=\"radio__item\">\n          <label>\n            <input\n              type=\"radio\"\n              value=\"random\"\n              checked={selected === 'random'}\n              onChange={handleSelected}\n            />\n            <span className=\"radio__text\">Random</span>\n          </label>\n        </div>\n        <div className=\"radio__item\">\n          <label>\n            <input\n              type=\"radio\"\n              value=\"categories\"\n              checked={selected === 'categories'}\n              onChange={handleSelected}\n            />\n            <span className=\"radio__text\">From categories</span>\n          </label>\n          {selected === 'categories' ? (\n            <div className=\"categories__list\">\n              {categories.map(cat => (\n                <button\n                  type=\"button\"\n                  className=\"categories__item\"\n                  onClick={handleCategories}\n                  key={cat}\n                >\n                  {cat}\n                </button>\n              ))}\n            </div>\n          ) : null}\n        </div>\n        <div className=\"radio__item\">\n          <label>\n            <input\n              type=\"radio\"\n              value=\"search\"\n              checked={selected === 'search'}\n              onChange={handleSelected}\n            />\n            <span className=\"radio__text\">Search</span>\n          </label>\n          {selected === 'search'\n            ? (\n              <div className=\"radio__form\">\n                <input\n                  className=\"radio__input\"\n                  placeholder=\"Free text search...\"\n                  value={query}\n                  onChange={handleInput}\n                />\n                {inputError\n                  ? (\n                    <span className=\"radio__input-error\">\n                      input must be more than 3 characters\n                    </span>\n                  )\n                  : null}\n              </div>\n            )\n            : null}\n        </div>\n      </form>\n      <button\n        type=\"button\"\n        className=\"radio__button\"\n        onClick={handleGetJoke}\n      >\n  Get a joke\n      </button>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  categories: state.categories,\n  searchJokes: state.searchJokes,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCategories: () => dispatch(getCategoriesThunk()),\n  setSearchJoke: query => dispatch(getJokeSearchThunk(query)),\n  clearSearch: () => dispatch(clearSearchJoke()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Radio);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport '../App.scss';\nimport './Randomizer.scss';\nimport { getPassedHours } from '../utilities';\nimport favorite from '../assets/icon/favorite.svg';\nimport message from '../assets/icon/message.svg';\n\nexport const SearchResult = (props) => {\n  const { searchJokes, setFavorite } = props;\n  const handleAddToFavorite = (id) => {\n    const searchItem = searchJokes.find(item => item.id === id);\n\n    setFavorite(searchItem);\n  };\n\n  return (\n    <div>\n      {searchJokes.map((joke) => {\n        const previousDate = new Date(joke.updated_at);\n        const nextDate = new Date();\n        const passedHours = getPassedHours(previousDate, nextDate);\n        const { id } = joke;\n\n        return (\n          <div className=\"randomizer__content content\" key={joke.id}>\n            <div className=\"content__addToFavorite-wrapper\">\n              <button\n                type=\"button\"\n                className=\"content__addToFavorite\"\n                onClick={() => handleAddToFavorite(id)}\n              >\n                <img src={favorite} alt=\"add to favorites\" />\n              </button>\n            </div>\n            <div className=\"content__item-container\">\n              <div className=\"content__textIcon-container\">\n                <img\n                  src={message}\n                  alt=\"joke item icon\"\n                  className=\"content__textIcon\"\n                />\n              </div>\n              <div className=\"content__joke joke\">\n                <div className=\"joke__id-wrapper\">\n                  <span className=\"joke__id-title\">ID:</span>\n                  <a\n                    href={joke.url}\n                    className=\"joke__id-link\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {joke.id}\n                  </a>\n                </div>\n                <div className=\"joke__value\">{joke.value}</div>\n                <div className=\"joke__footer\">\n                  <div className=\"joke__date\">\n                    {`Last update: ${passedHours.toFixed()} hours ago`}\n                  </div>\n                  <div className=\"joke__categories\">\n                    {joke.categories.length ? joke.categories : null}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport '../App.scss';\nimport { connect } from 'react-redux';\nimport {\n  getRandomJokeThunk,\n  setFavoriteJoke,\n  getJokeFromCategoriesThunk,\n} from '../redux/reducer';\nimport RandomJoke from './RandomJoke';\nimport './Randomizer.scss';\nimport Radio from './Radio';\nimport { SearchResult } from './SearchResult';\n\nconst Randomizer = (props) => {\n  const {\n    getRandomJoke,\n    randomJoke,\n    setFavorite,\n    setJokeFromCategories,\n    searchJokes,\n  } = props;\n\n  return (\n    <div className=\"randomizer\">\n      <h1 className=\"randomizer__heading\">Chuck Norris facts</h1>\n      <p className=\"randomizer__title\">Hey!</p>\n      <p className=\"randomizer__underTitle\">\n          Let’s try to find a joke for you:\n      </p>\n      <Radio\n        getRandomJoke={getRandomJoke}\n        setJokeFromCategories={setJokeFromCategories}\n      />\n      {randomJoke === null\n        ? null\n        : (\n          <RandomJoke\n            randomJoke={randomJoke}\n            setFavorite={setFavorite}\n          />\n        )}\n      {searchJokes.length\n        ? (\n          <SearchResult\n            searchJokes={searchJokes}\n            setFavorite={setFavorite}\n          />\n        )\n        : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  randomJoke: state.randomJoke,\n  searchJokes: state.searchJokes,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getRandomJoke: () => dispatch(getRandomJokeThunk()),\n  setFavorite: payload => dispatch(setFavoriteJoke(payload)),\n  setJokeFromCategories: category => dispatch(\n    getJokeFromCategoriesThunk(category),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Randomizer);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './Favorite.scss';\nimport { connect } from 'react-redux';\nimport { deleteFavoriteJoke } from '../redux/reducer';\nimport favorite from '../assets/icon/heart.svg';\nimport message from '../assets/icon/message.svg';\nimport { getPassedHours } from '../utilities';\n\nconst Favorite = (props) => {\n  const { favoriteJokes, deleteFavorite } = props;\n\n  return (\n    <div className=\"favorite\">\n      <h2 className=\"favorite__title\">Favourite</h2>\n      {favoriteJokes.map((joke) => {\n        const previousDate = new Date(joke.updated_at);\n        const nextDate = new Date();\n        const passedHours = getPassedHours(previousDate, nextDate);\n        const handleDeleteFavorite = () => {\n          deleteFavorite(joke.id);\n        };\n\n        return (\n          <div className=\"favorite__content content-favourite\" key={joke.id}>\n            <div className=\"content-favourite__addToFavorite-wrapper\">\n              <button\n                type=\"button\"\n                className=\"content-favourite__addToFavorite\"\n                onClick={handleDeleteFavorite}\n              >\n                <img src={favorite} alt=\"remove from favorites\" />\n              </button>\n            </div>\n            <div className=\"content-favourite__item-container\">\n              <div className=\"content-favourite__textIcon-container\">\n                <img\n                  src={message}\n                  alt=\"joke item icon\"\n                  className=\"content-favourite__textIcon\"\n                />\n              </div>\n              <div className=\"content-favourite__joke joke\">\n                <div className=\"joke__id-wrapper\">\n                  <span className=\"joke__id-title\">ID:</span>\n                  <a\n                    href={joke.url}\n                    className=\"joke__id-link\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {joke.id}\n                  </a>\n                </div>\n                <div className=\"joke__value\">{joke.value}</div>\n                <div className=\"joke__footer\">\n                  <div className=\"joke__date\">\n                    {`Last update: ${passedHours.toFixed()} hours ago`}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  favoriteJokes: state.favoriteJokes,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteFavorite: id => dispatch(deleteFavoriteJoke(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorite);\n","import React from 'react';\nimport './App.scss';\nimport Randomizer from './components/Randomizer';\nimport Favorite from './components/Favorite';\n\nconst App = () => (\n  <div className=\"app-wrapper\">\n    <div className=\"app-wrapper__content\"><Randomizer /></div>\n    <div className=\"app-wrapper__favorite\"><Favorite /></div>\n  </div>\n);\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/favorite.e977fb9e.svg\";"],"sourceRoot":""}