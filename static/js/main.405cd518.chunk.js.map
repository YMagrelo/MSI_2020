{"version":3,"sources":["assets/icon/message.svg","assets/icon/favorite.svg","assets/icon/heart.svg","api.js","redux/reducer.jsx","constants.js","components/RandomJoke.jsx","components/Radio.jsx","components/Randomizer.jsx","components/Favorite.jsx","App.jsx","redux/store.jsx","index.js"],"names":["module","exports","BASE_URL","initialState","randomJoke","favoriteJokes","categories","getRandomJokeThunk","dispatch","fetch","then","response","json","data","type","payload","getCategoriesThunk","getPassedHours","prevDate","presentDate","connect","props","setFavorite","previousDate","Date","updated_at","nextDate","passedHours","className","onClick","src","favorite","alt","message","href","url","id","value","toFixed","state","setCategories","useState","selected","setSelected","useEffect","handleSelected","event","target","checked","onChange","map","cat","getRandomJoke","setFavoriteJoke","deleteFavorite","joke","key","App","store","createStore","action","filter","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.405cd518.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/message.ee31211c.svg\";","module.exports = __webpack_public_path__ + \"static/media/favorite.e977fb9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.0865c832.svg\";","const BASE_URL = 'https://api.chucknorris.io/jokes/';\n\nexport const getJoke = () => fetch(`${BASE_URL}random`)\n  .then(response => response.json());\n\nexport const getCategories = () => fetch(`${BASE_URL}categories`)\n  .then(response => response.json());\n","import { getJoke, getCategories } from '../api';\n\nconst SET_RANDOM_JOKE = 'SET_RANDOM_JOKE';\nconst SET_FAVORITE_JOKE = 'SET_FAVORITE_JOKE';\nconst DELETE_FROM_FAVORITE = 'DELETE_FROM_FAVORITE';\nconst SET_CATEGORIES = 'SET_CATEGORIES';\n\nconst initialState = {\n  randomJoke: null,\n  favoriteJokes: [],\n  categories: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_RANDOM_JOKE:\n      return {\n        ...state,\n        randomJoke: action.payload,\n      };\n\n    case SET_FAVORITE_JOKE:\n      return {\n        ...state,\n        favoriteJokes: [...state.favoriteJokes, action.payload],\n      };\n\n    case DELETE_FROM_FAVORITE:\n      return {\n        ...state,\n        favoriteJokes: state.favoriteJokes\n          .filter(joke => joke.id !== action.payload),\n      };\n\n    case SET_CATEGORIES:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setRandomJoke = payload => ({\n  type: SET_RANDOM_JOKE,\n  payload,\n});\n\nconst setCategories = payload => ({\n  type: SET_CATEGORIES,\n  payload,\n});\n\nexport const setFavoriteJoke = payload => ({\n  type: SET_FAVORITE_JOKE,\n  payload,\n});\n\nexport const deleteFavoriteJoke = payload => ({\n  type: DELETE_FROM_FAVORITE,\n  payload,\n});\n\nexport const getRandomJokeThunk = () => (dispatch) => {\n  getJoke()\n    .then((data) => {\n      dispatch(setRandomJoke(data));\n    });\n};\n\nexport const getCategoriesThunk = () => (dispatch) => {\n  getCategories()\n    .then((data) => {\n      dispatch(setCategories(data));\n    });\n};\n","/* eslint-disable max-len */\nexport const getPassedHours = (prevDate, presentDate) => ((((presentDate - prevDate) / 1000) / 60) / 60);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport '../App.scss';\nimport { connect } from 'react-redux';\nimport './Randomizer.scss';\nimport favorite from '../assets/icon/favorite.svg';\nimport message from '../assets/icon/message.svg';\nimport { getPassedHours } from '../constants';\n\nconst RandomJoke = (props) => {\n  const { randomJoke, setFavorite } = props;\n\n  const handleAddToFavorite = () => {\n    setFavorite(randomJoke);\n  };\n\n  const previousDate = new Date(randomJoke.updated_at);\n  const nextDate = new Date();\n  const passedHours = getPassedHours(previousDate, nextDate);\n\n  return (\n    <div className=\"randomizer__content content\">\n      <div className=\"content__addToFavorite-wrapper\">\n        <button\n          type=\"button\"\n          className=\"content__addToFavorite\"\n          onClick={handleAddToFavorite}\n        >\n          <img src={favorite} alt=\"add to favorite\" />\n        </button>\n      </div>\n      <div className=\"content__item-container\">\n        <div className=\"content__textIcon-wrapper\">\n          <img\n            src={message}\n            alt=\"joke item icon\"\n            className=\"content__textIcon\"\n          />\n        </div>\n        <div className=\"content__joke joke\">\n          <div className=\"joke__id-wrapper\">\n            <span className=\"joke__id-title\">ID: </span>\n            <a\n              href={randomJoke.url}\n              className=\"joke__id-link\"\n            >\n              {randomJoke.id}\n            </a>\n          </div>\n          <div className=\"joke__value\">{randomJoke.value}</div>\n          <div className=\"joke__footer\">\n            <div className=\"joke__date\">\n              {`Last update: ${passedHours.toFixed()} hours ago`}\n            </div>\n            <div className=\"joke__categories\">Categories</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect()(RandomJoke);\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './Radio.scss';\nimport { connect } from 'react-redux';\nimport { getCategoriesThunk } from '../redux/reducer';\n\nconst Radio = (props) => {\n  const { categories, setCategories } = props;\n  const [selected, setSelected] = useState('random');\n\n  useEffect(() => {\n    setCategories();\n  });\n\n  const handleSelected = (event) => {\n    const { value } = event.target;\n\n    setSelected(value);\n  };\n\n  return (\n    <form className=\"radio__list\">\n      <div className=\"radio__item\">\n        <label>\n          <input\n            type=\"radio\"\n            value=\"random\"\n            checked={selected === 'random'}\n            onChange={handleSelected}\n          />\n          <span className=\"radio__text\">Random</span>\n        </label>\n      </div>\n      <div className=\"radio__item\">\n        <label>\n          <input\n            type=\"radio\"\n            value=\"categories\"\n            checked={selected === 'categories'}\n            onChange={handleSelected}\n          />\n          <span className=\"radio__text\">From categories</span>\n        </label>\n        {selected === 'categories' ? (\n          <div className=\"categories__list\">\n            {categories.map(cat => (\n              <button\n                type=\"button\"\n                className=\"categories__item\"\n              >\n                {cat}\n              </button>\n            ))}\n          </div>\n        ) : null}\n      </div>\n      <div className=\"radio__item\">\n        <label>\n          <input\n            type=\"radio\"\n            value=\"search\"\n            checked={selected === 'search'}\n            onChange={handleSelected}\n          />\n          <span className=\"radio__text\">Search</span>\n        </label>\n      </div>\n    </form>\n  );\n};\n\nconst mapStateToProps = state => ({\n  categories: state.categories,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCategories: () => dispatch(getCategoriesThunk()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Radio);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport '../App.scss';\nimport { connect } from 'react-redux';\nimport { getRandomJokeThunk, setFavoriteJoke } from '../redux/reducer';\nimport RandomJoke from './RandomJoke';\nimport './Randomizer.scss';\nimport Radio from './Radio';\n\nconst Randomizer = (props) => {\n  const { getRandomJoke, randomJoke, setFavorite } = props;\n\n  return (\n    <div className=\"randomizer\">\n      <h1 className=\"randomizer__heading\">Chuck Norris facts</h1>\n      <p className=\"randomizer__title\">Hey!</p>\n      <p className=\"randomizer__underTitle\">\n          Let’s try to find a joke for you:\n      </p>\n      <Radio />\n      <button\n        type=\"button\"\n        className=\"randomizer__button\"\n        onClick={getRandomJoke}\n      >\n  Get a joke\n      </button>\n      {randomJoke === null\n        ? null\n        : (\n          <RandomJoke\n            randomJoke={randomJoke}\n            setFavorite={setFavorite}\n          />\n        )}\n\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  randomJoke: state.randomJoke,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getRandomJoke: () => dispatch(getRandomJokeThunk()),\n  setFavorite: payload => dispatch(setFavoriteJoke(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Randomizer);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './Favorite.scss';\nimport { connect } from 'react-redux';\nimport { deleteFavoriteJoke } from '../redux/reducer';\nimport favorite from '../assets/icon/heart.svg';\nimport message from '../assets/icon/message.svg';\nimport { getPassedHours } from '../constants';\n\nconst Favorite = (props) => {\n  const { favoriteJokes, deleteFavorite } = props;\n\n  return (\n    <div className=\"favorite\">\n      <h2 className=\"favorite__title\">Favourite</h2>\n      {favoriteJokes.map((joke) => {\n        const previousDate = new Date(joke.updated_at);\n        const nextDate = new Date();\n        const passedHours = getPassedHours(previousDate, nextDate);\n        const handleDeleteFavorite = () => {\n          deleteFavorite(joke.id);\n        };\n\n        return (\n          <div className=\"favorite__content content-favourite\" key={joke.id}>\n            <div className=\"content-favourite__addToFavorite-wrapper\">\n              <button\n                type=\"button\"\n                className=\"content-favourite__addToFavorite\"\n                onClick={handleDeleteFavorite}\n              >\n                <img src={favorite} alt=\"remove from favorites\" />\n              </button>\n            </div>\n            <div className=\"content-favourite__item-container\">\n              <div className=\"content-favourite__textIcon-container\">\n                <img\n                  src={message}\n                  alt=\"joke item icon\"\n                  className=\"content-favourite__textIcon\"\n                />\n              </div>\n              <div className=\"content-favourite__joke joke\">\n                <div className=\"joke__id-wrapper\">\n                  <span className=\"joke__id-title\">ID:</span>\n                  <a\n                    href={joke.url}\n                    className=\"joke__id-link\"\n                  >\n                    {joke.id}\n                  </a>\n                </div>\n                <div className=\"joke__value\">{joke.value}</div>\n                <div className=\"joke__footer\">\n                  <div className=\"joke__date\">\n                    {`Last update: ${passedHours.toFixed()} hours ago`}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  favoriteJokes: state.favoriteJokes,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteFavorite: id => dispatch(deleteFavoriteJoke(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorite);\n","import React from 'react';\nimport './App.scss';\nimport Randomizer from './components/Randomizer';\nimport Favorite from './components/Favorite';\n\nconst App = () => (\n  <div className=\"app-wrapper\">\n    <div className=\"app-wrapper__content\"><Randomizer /></div>\n    <div className=\"app-wrapper__favorite\"><Favorite /></div>\n  </div>\n);\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}